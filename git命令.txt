//从224节点复制VARxMD开发目录
git clone xjqiao@192.168.155.224:/home/VARMD.git

//新建并切换newBranch分支，并从remote端origin/master复制
git checkout -b newBrach origin/master

git branch --remote  
git checkout -b new_branch          创建分支
git checkout another_branch
git push origin branch_name     push本地分支代码到远端服务器,如果远端服务器没有该分支，将会自动创建

删除本地分支,首先切换到别的分支,然后才能删除某个分支
[plain] 
git checkout b  
git branch -d a  

删除远程分支
[plain] 
git push origin --delete branch_name  

git merge b  
git merge origin/b  
-----------------------------------------------------------------------------------------------------------------------------------------------------
查看隐藏文件：ls -lA
启动git：ll|less
初始化：git init
设置签名：1. 形式：邮箱+密码
2. 命令： 
项目级别/仓库级别：仅在当前本地库范围有效
git config user.name tom
git config user.email 123@163.com
系统用户：登录当前操作系统用户范围
git config --user.name tom
git config --global user.email 123@163.com
项目级别签名优于系统级别

git init
git status
git add [file name]
git rm --cached 文件：从缓存区删掉
git commit [file name]
Cat 文件名
git commit -m "commit message" [file name]
查看历史记录git log 
git log --pretty=oneline
git reflog （HEAD@移到到当前版本需要的步数）
前进后退：
删除文件并找回：前提是删除前。文件存在时的状态提交到了本地库
git reset --hard [索引值]
rm [filename]

文件比较：
将工作区的文件与暂存区进行比较 git diff [filename]
将工作区中的文件与本地库历史记录比较 git diff [本地库中历史版本][filename]
分支操作：
查看：git branch -v
创建：git branch hot_fix
切换：git checkout hot_fix
合并：git merge hot_fix
解决冲突：git add [filename]

远程：git remote -v
git remote add origin 地址
推送：git push workspace master
本地新建目录在该目录中克隆远程文件
git clone [远程地址]

关于GitHub报错：
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
Failed during: git fetch origin master:refs/remotes/origin/master --tags --force
解决方法
首先检查有没有在GitHub的https://github.com/settings/keys上添加你本机的SSH key。注意换了电脑是要重新添加的，每台都不一样。添加SSH key的方法：（引自廖雪峰老师的教程）
在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：

$ ssh-keygen -t rsa -C "youremail@example.com"
你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可。

如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。

第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：

然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：

点“Add Key”，你就应该看到已经添加的Key：

如果添加了还是出现这个问题，那么问题大概率就定位在了你本机的这个git仓库并没有和这个SSH key 关联上。用下述方法解决：
ssh-add "你的 id-rsa 文件地址"
注意这里ssh-add后面填的是私钥地址，如mac电脑是 /Users/用户名/.ssh/id_rsa

add之后可以用

$ ssh git@github.com
验证是不是添加成功。

git fetch work master
git checkout origin/master
git merge origin/master

团队冲突：
git push work master
git add [filename]
git commit -m ""

跨团队合作
Fork下来到自己GitHub
从自己的远端clone下来到本地
修改到远端
pull request->new pull request->create pull requests 
团队可以 merge pull request
将远程库修改拉取到本地

ssh登录
cd ～
rm -rvf .ssh
Ssh-keygen -t rsa -C tfdmhello@163.com
cd .ssh
ls -IF







 

